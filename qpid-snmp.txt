MRG-MESSAGING-MIB DEFINITIONS ::= BEGIN

--
-- Red Hat MRG Messaging mib for amqp broker
--
-- This file is generated from management-schema.xml
-- using qpid-snmp-mibgen and qpid-snmp.txt.
-- Do not edit this mib file directly.
--
-- iso(1).org(3).dod(6).internet(1).private(4).enterprises(1)
--                             |
--                       apache(18060)
--                             |
--                    _________________________
--                   |                         |
--               amqp(15)                 other apache OIDs (https://cwiki.apache.org/DIRxPMGT/oid-assignment-scheme.html)
--                   |
--           ___________________
--          |                   |
--      amqp010(1)       amqp10(2) - reserved for future use
--          |
--           ___________________________________________________________________
--          |                                                                   |
--
--      qpid010(1) this mib defines this node and all its child nodes         [other amqp101 based products]...
--          |
--        ____________________________________________________________________________________________________________________
--       |                                                                    |                           |                   |
--	  qpid010BrokerClasses(1)                                      qpid010Plugins(2)              qpid010Performance(3)    qpid010Events(4)
--       |                                                                    |                           |
--  <qpid010System, qpid010Memory, qpid010Broker...>    [qpid010Acl, qpid010Cluster, qpid010HA]        qpidCnfGroups(1)
--                                                                                                        |
--                                                                         _______________________________________________
--                                                                        |           |                                   |
--                                                          qpidCnfGrpRequired(1) qpidCnfGrpOptional(2)   qpidCnfGrpArguments(3)    ...

IMPORTS
        MODULE-IDENTITY, OBJECT-IDENTITY, OBJECT-TYPE, Counter64,
                Counter32, Integer32, Unsigned32, TimeTicks, enterprises,
                NOTIFICATION-TYPE
            FROM SNMPv2-SMI
        OBJECT-GROUP, NOTIFICATION-GROUP, MODULE-COMPLIANCE
            FROM SNMPv2-CONF
        TruthValue, TEXTUAL-CONVENTION
            FROM SNMPv2-TC;

qpid010 MODULE-IDENTITY
        LAST-UPDATED "%{today}Z"
        ORGANIZATION "www.redhat.com"
        CONTACT-INFO
                "e-mail: eallen@redhat.com"
        DESCRIPTION
            "Root for Red Hat qpid messaging nodes"
        REVISION "%{today}Z"
            DESCRIPTION
                "First release"
        ::= { enterprises 18060 15 1 }

--
-- TEXTUAL-CONVENTIONS to define the qpid data types that don't
-- map directly to mib types
-- Note: mib types must begin with a cap, qpid types are normally
-- all lower case
-- __________________________________________________________________
Uuid ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "8a-4a-4a-4a-12a"
        STATUS          current
        DESCRIPTION     "The system generates uuids that look like dd29e3bc-6acd-4f9e-8672-5c9c0bf716a7"
        SYNTAX          OCTET STRING (SIZE (36))

Sstr ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "255a"
        STATUS          current
        DESCRIPTION     "Short string 0 - 255 characters"
        SYNTAX          OCTET STRING (SIZE (0..255))

Lstr ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "65535a"
        STATUS          current
        DESCRIPTION     "Long string"
        SYNTAX          OCTET STRING (SIZE (0..65535))

ObjId ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "255a"
        STATUS          current
        DESCRIPTION     "Internal field that references another qpid object."
        SYNTAX          OCTET STRING (SIZE (0..255))

Uint64 ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "d"
        STATUS          current
        DESCRIPTION     "There is no mib 64 unsigned, so use Counter64"
        SYNTAX          Counter64

Uint16 ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "d"
        STATUS          current
        DESCRIPTION     "There is no mib 16 unsigned, so use Integer"
        SYNTAX          Integer32

Hilo32 ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "d"
        STATUS          current
        DESCRIPTION     "Each Hilo32 data object is one of three data values:
                        1. The current data value at the time of the get request.
                        2. The highest value for the reporting interval
                        3. The lowest value for the reporting interval"
        SYNTAX          Integer32

Map ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "65535a"
        STATUS          current
        DESCRIPTION     "Textual representation of a map<string, string>"
        SYNTAX          OCTET STRING (SIZE (0..65535))


--
-- The root OID for this MIB
-- _____________________________________________________________________
qpid010BrokerClasses OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION
        "Root for all broker classes defined in $QPIDROOT/specs/management-schema.xml"
        ::= { qpid010 1 }
--
--
-- Parent node for amqp 0.10 messaging broker plugins
--
qpid010Plugins OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION
        "Parent node for all amqp 0.10 broker plugins"
        ::= { qpid010 2 }

--
-- Parent node for amqp 0.10 conformance groupings
--
qpid010Conformance OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent for all conformance objects"
        ::= { qpid010 3 }

--
-- Parent node for events
--
qpid010Events OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent for all qpid events"
        ::= { qpid010 4 }

--
-- Define the OID for each top level messaging class
-- ______________________________________________________________
<forEachClass>
<singleObject>
qpid010%{capClassName} OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent of the %{capClassName} properties"
        ::= { qpid010BrokerClasses %{classSequence} }
</singleObject>
<multipleObjects>
qpid010%{capClassName}s OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Table for all the %{capClassName}s"
        ::= { qpid010BrokerClasses %{classSequence} }
</multipleObjects>
</forEachClass><forEachPluginClass>
qpid010%{capClassName} OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent of the plugin %{capClassName} properties"
        ::= { qpid010Plugins %{classSequence} }
</forEachPluginClass>

--
-- Define the [table]/data for each of the top level classes
-- ______________________________________________________________
<forEachClass><singleObject>-- ______________________________________________________________
-- %{capClassName} class properties and statistics
-- ______________________________________________________________
<forEachProperty>
--
-- The %{capChildName} data object
--
qpid010%{capChildName} OBJECT-TYPE
        SYNTAX      %{childType}
        %{unit}MAX-ACCESS  %{childAccess}
        STATUS      current
        DESCRIPTION "%{childDesc}"
        ::= { qpid010%{capClassName} %{childSequence} }
</forEachProperty>
</singleObject><multipleObjects>-- ______________________________________________________________
-- %{capClassName} class table definition
-- ______________________________________________________________
qpid010%{capClassName}Table OBJECT-TYPE
        SYNTAX      SEQUENCE OF Qpid010%{capClassName}Entry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "table of %{className}s"
        ::= { qpid010%{capClassName}s 1 }
--
-- %{className}Entry row definition
--
qpid010%{capClassName}Entry OBJECT-TYPE
        SYNTAX      Qpid010%{capClassName}Entry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "A row in the %{className} table"
        INDEX { qpid010%{capClassName}InternalIndex }
        ::= { qpid010%{capClassName}Table 1 }

Qpid010%{capClassName}Entry ::= SEQUENCE {<forEachProperty>
    qpid010%{capChildName}%{capChildNameSpace}%{childType},</forEachProperty>
    qpid010%{capClassName}InternalIndex           Unsigned32
}
<forEachProperty>
--
-- qpid010%{capChildName} data object
--
qpid010%{capChildName} OBJECT-TYPE
        SYNTAX      %{childType}
        %{unit}MAX-ACCESS  %{childAccess}
        STATUS      current
        DESCRIPTION "%{childDesc}"
        ::= { qpid010%{capClassName}Entry %{childSequence} }
</forEachProperty>
--
-- %{className}InternalIndex index column
--
qpid010%{capClassName}InternalIndex OBJECT-TYPE
        SYNTAX      Unsigned32
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "Internal index for %{className} table"
        ::= { qpid010%{capClassName}Entry %{nextChildNumber} }
</multipleObjects>
</forEachClass>
<forEachPluginClass>-- ______________________________________________________________
-- %{capClassName} plugin class properties and statistics
-- ______________________________________________________________
<forEachProperty>
--
-- The %{capChildName} data object
--
qpid010%{capChildName} OBJECT-TYPE
        SYNTAX      %{childType}
        %{unit}MAX-ACCESS  %{childAccess}
        STATUS      current
        DESCRIPTION "%{childDesc}"
        ::= { qpid010%{capClassName} %{childSequence} }
</forEachProperty>
</forEachPluginClass>

--
-- Notification Objects
-- These are the object/parameters that are sent in notification
-- events (when the agent sends a "trap" message to the manager on port 162)
-- ______________________________________________________________
qpid010EvtList OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Placeholder needed for SMIv1 managers. Node number must be 0"
        ::= {qpid010Events 0 }

qpid010EvtArgList OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Top level node for all the event arguments"
        ::= { qpid010Events 1 }
--
-- Objects that are passed with events
--<EventArguments>
qpid010Evt%{argumentName} OBJECT-TYPE
        SYNTAX      %{argumentType}
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION "%{argumentDesc}"
        ::= { qpid010EvtArgList %{eventArgumentSequence} }
</EventArguments>
--
-- Notfication events that are raised by the agent
--
<Events>
qpid010Evt%{eventName} NOTIFICATION-TYPE
        OBJECTS {
            %{eventArguments}
            }
        STATUS      current
        DESCRIPTION "%{eventSev} %{eventName} event"
        ::= { qpid010EvtList %{eventSequence} }
</Events>

--
-- Conformance Objects and Groups
-- This puts the data objects and notification events into
-- groups that can be marked as required or optional
-- ______________________________________________________________
qpid010CnfGroups OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Root for all groups"
        ::= { qpid010Conformance 1 }

qpid010CnfGrpRequired OBJECT-GROUP
        OBJECTS {
%{required}        }
        STATUS      current
        DESCRIPTION "Manditory class elements"
        ::= { qpid010CnfGroups 1 }

qpid010CnfGrpOptional OBJECT-GROUP
        OBJECTS {
%{optional}        }
        STATUS      current
        DESCRIPTION "Optional class elements"
        ::= { qpid010CnfGroups 2 }

qpid010CnfGrpArguments OBJECT-GROUP
        OBJECTS {
%{allEventArguments}        }
        STATUS      current
        DESCRIPTION "Data objects used as arguments to events"
        ::= { qpid010CnfGroups 3 }

<forEachSeverity>
qpid010CnfGrp%{sev} NOTIFICATION-GROUP
        NOTIFICATIONS {
%{eventNames}        }
        STATUS      current
        DESCRIPTION "Events that are of severity %{sev}"
        ::= { qpid010CnfGroups %{sevSequence} }
</forEachSeverity>

qpid010Compliance MODULE-COMPLIANCE
        STATUS      current
        DESCRIPTION "Manditory and non-manditory mib objects"
        MODULE -- This module
            MANDATORY-GROUPS { qpid010CnfGrpRequired,
                               qpid010CnfGrpOptional,
                               <forEachSeverity>qpid010CnfGrp%{sev},</forEachSeverity>
                               qpid010CnfGrpArguments }

        ::= { qpid010Conformance 2 }

END
