QPID-MESSAGING-MIB DEFINITIONS ::= BEGIN

--
-- Apache amqp messaging MIB for qpid broker
--
-- This file is generated from management-schema.xml found in the apache qpid packages
-- using qpid-snmp-mibgen and qpid-snmp.txt.
-- Do not edit this mib file directly, instead generate it using
-- qpid-snmp-mibgen \
--	-s $QPID/specs/management-schema.xml \
--  -s $QPID/cpp/src/qpid/acl/management-schema.xml \
--  -s $QPID/cpp/src/qpid/cluster/management-schema.xml \
--  -s $QPID/cpp/src/qpid/ha/management-schema.xml \
--  -m QPID-MESSAGING-MIB.txt 
-- 
--
-- iso(1).org(3).dod(6).internet(1).private(4).enterprises(1)
--                             |
--                       apache(18060)
--                             |
--                    _________|_______________
--                   |                         |
--               qpid(5672)            other apache OIDs 
--                   |          (https://cwiki.apache.org/DIRxPMGT/oid-assignment-scheme.html)
--                   |
--           ________|_________________________________
--          |                         |                |
--      broker(1)                   plugins(2)        SNMP(3)
--          |                         |                |
--        __|______..._            ___|______         _|__________________________________
--       |      |      |          |    |     |       |                  |                 |
--	 system  memory  sessions    acl cluster ha   conformance(1)     events(2)     compliance(3) 
--       |     |       |          |    |     |       |                  |
--      _|_   ...     ...        _|_  ...   ...      |                  |
--     |   |                    |   |                |                  |
--    id  name...              ref policy...         |                  |
--                                                   |                  |
--                  _________________________________|______          __|_________
--                 |          |            |        |       |        |            |
--             required    optional    arguments  error  inform...  connect declareQueue ...

IMPORTS
        MODULE-IDENTITY, OBJECT-IDENTITY, OBJECT-TYPE, Counter64,
                Counter32, Integer32, Unsigned32, TimeTicks, enterprises,
                NOTIFICATION-TYPE
            FROM SNMPv2-SMI
        OBJECT-GROUP, NOTIFICATION-GROUP, MODULE-COMPLIANCE
            FROM SNMPv2-CONF
        TruthValue, TEXTUAL-CONVENTION
            FROM SNMPv2-TC;

-- _____________________________________________________________________
--
-- The root OID for this MIB
-- _____________________________________________________________________
apacheAMQP MODULE-IDENTITY
        LAST-UPDATED "%{today}Z"
        ORGANIZATION "qpid.apache.org"
        CONTACT-INFO
                "e-mail: dev@qpid.apache.org"
        DESCRIPTION
            "Root for apache amqp qpid messaging nodes. See https://cwiki.apache.org/DIRxPMGT/oid-assignment-scheme.html"
        REVISION "%{today}Z"
            DESCRIPTION
                "First release"
        ::= { enterprises 18060 }

-- _____________________________________________________________________
--
-- Parent node for qpid  
-- _____________________________________________________________________
qpid OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION
        "qpid implementation of amqp"
        ::= { apacheAMQP 5672 }

-- _____________________________________________________________________
--
-- Parent node for all qpid broker objects  
-- _____________________________________________________________________
broker OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION
        "qpid implementation of amqp"
        ::= { qpid 1 }

-- _____________________________________________________________________
--
-- Parent node for optional broker plugin objects  
-- _____________________________________________________________________
brokerPlugins OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION
        "optional broker plugins"
        ::= { qpid 2 }

-- _____________________________________________________________________
--
-- Parent node for snmp specific objects  
-- _____________________________________________________________________
qpidSNMP OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION
        "snmp specific objects"
        ::= { qpid 3 }

-- _____________________________________________________________________
--
-- Define the OID for each top level messaging class
-- ______________________________________________________________
<forEachClass>
<singleObject>
broker%{capClassName} OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent of the %{capClassName} properties"
        ::= { broker %{classSequence} }
</singleObject>
<multipleObjects>
broker%{capClassName}s OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Table for all the %{capClassName}s"
        ::= { broker %{classSequence} }
</multipleObjects>
</forEachClass><forEachPluginClass>
broker%{capClassName} OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent of the plugin %{capClassName} properties"
        ::= { brokerPlugins %{classSequence} }
</forEachPluginClass>

-- __________________________________________________________________
-- TEXTUAL-CONVENTIONS to define the qpid data types that don't
-- map directly to mib types
-- Note: mib types must begin with a cap, qpid types are normally
-- all lower case
-- __________________________________________________________________
Uuid ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "8a-4a-4a-4a-12a"
        STATUS          current
        DESCRIPTION     "The system generates uuids that look like dd29e3bc-6acd-4f9e-8672-5c9c0bf716a7"
        SYNTAX          OCTET STRING (SIZE (36))

Sstr ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "255a"
        STATUS          current
        DESCRIPTION     "Short string 0 - 255 characters"
        SYNTAX          OCTET STRING (SIZE (0..255))

Lstr ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "65535a"
        STATUS          current
        DESCRIPTION     "Long string"
        SYNTAX          OCTET STRING (SIZE (0..65535))

ObjId ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "255a"
        STATUS          current
        DESCRIPTION     "Internal field that references another qpid object."
        SYNTAX          OCTET STRING (SIZE (0..255))

Uint64 ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "d"
        STATUS          current
        DESCRIPTION     "There is no mib 64 unsigned, so use Counter64"
        SYNTAX          Counter64

Uint16 ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "d"
        STATUS          current
        DESCRIPTION     "There is no mib 16 unsigned, so use Integer"
        SYNTAX          Integer32

Hilo32 ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "d"
        STATUS          current
        DESCRIPTION     "Each Hilo32 data object is one of three data values:
                        1. The current data value at the time of the get request.
                        2. The highest value for the reporting interval
                        3. The lowest value for the reporting interval"
        SYNTAX          Integer32

Map ::= TEXTUAL-CONVENTION
        DISPLAY-HINT    "65535a"
        STATUS          current
        DESCRIPTION     "Textual representation of a map<string, string>"
        SYNTAX          OCTET STRING (SIZE (0..65535))

-- _____________________________________________________________________
--
-- Define the [table]/data for each of the top level classes
-- ______________________________________________________________
<forEachClass><singleObject>-- ______________________________________________________________
-- %{capClassName} class properties and statistics
-- ______________________________________________________________
<forEachProperty>
--
-- The %{capChildName} data object
--
broker%{capChildName} OBJECT-TYPE
        SYNTAX      %{childType}
        %{unit}MAX-ACCESS  %{childAccess}
        STATUS      current
        DESCRIPTION "%{childDesc}"
        ::= { broker%{capClassName} %{childSequence} }
</forEachProperty>
</singleObject><multipleObjects>-- ______________________________________________________________
-- %{capClassName} class table definition
-- ______________________________________________________________
broker%{capClassName}Table OBJECT-TYPE
        SYNTAX      SEQUENCE OF Broker%{capClassName}Entry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "table of %{className}s"
        ::= { broker%{capClassName}s 1 }
--
-- %{className}Entry row definition
--
broker%{capClassName}Entry OBJECT-TYPE
        SYNTAX      Broker%{capClassName}Entry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "A row in the %{className} table"
        INDEX { broker%{capClassName}InternalIndex }
        ::= { broker%{capClassName}Table 1 }

Broker%{capClassName}Entry ::= SEQUENCE {<forEachProperty>
    broker%{capChildName}%{capChildNameSpace}%{childType},</forEachProperty>
    broker%{capClassName}InternalIndex           Unsigned32
}
<forEachProperty>
--
-- broker%{capChildName} data object
--
broker%{capChildName} OBJECT-TYPE
        SYNTAX      %{childType}
        %{unit}MAX-ACCESS  %{childAccess}
        STATUS      current
        DESCRIPTION "%{childDesc}"
        ::= { broker%{capClassName}Entry %{childSequence} }
</forEachProperty>
--
-- %{className}InternalIndex index column
--
broker%{capClassName}InternalIndex OBJECT-TYPE
        SYNTAX      Unsigned32
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "Internal index for %{className} table"
        ::= { broker%{capClassName}Entry %{nextChildNumber} }
</multipleObjects>
</forEachClass>
<forEachPluginClass>-- ______________________________________________________________
-- %{capClassName} plugin class properties and statistics
-- ______________________________________________________________
<forEachProperty>
--
-- The %{capChildName} data object
--
broker%{capChildName} OBJECT-TYPE
        SYNTAX      %{childType}
        %{unit}MAX-ACCESS  %{childAccess}
        STATUS      current
        DESCRIPTION "%{childDesc}"
        ::= { broker%{capClassName} %{childSequence} }
</forEachProperty>
</forEachPluginClass>

-- ________________________________________________________________________________
-- ________________________________________________________________________________
--
-- Parent node for amqp 0.10 conformance groupings
--
brokerConformance OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent for all conformance objects"
        ::= { qpidSNMP 1 }

--
-- Parent node for events
--
brokerEvents OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent for all qpid events"
        ::= { qpidSNMP 2 }

--
-- Parent node for events
--
brokerCompliance OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "The parent for the compliance object"
        ::= { qpidSNMP 3 }

--
-- Notification Objects
-- These are the object/parameters that are sent in notification
-- events (when the agent sends a "trap" message to the manager on port 162)
-- ______________________________________________________________
brokerEvtList OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Placeholder needed for SMIv1 managers. Node number must be 0"
        ::= {brokerEvents 0 }

brokerEvtArgList OBJECT-IDENTITY
        STATUS      current
        DESCRIPTION "Top level node for all the event arguments"
        ::= { brokerEvents 1 }
--
-- Objects that are passed with events
--<EventArguments>
brokerEvt%{argumentName} OBJECT-TYPE
        SYNTAX      %{argumentType}
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION "%{argumentDesc}"
        ::= { brokerEvtArgList %{eventArgumentSequence} }
</EventArguments>
--
-- Notfication events that are raised by the agent
--
<Events>
brokerEvt%{eventName} NOTIFICATION-TYPE
        OBJECTS {
            %{eventArguments}
            }
        STATUS      current
        DESCRIPTION "%{eventSev} %{eventName} event"
        ::= { brokerEvtList %{eventSequence} }
</Events>

--
-- Conformance Objects and Groups
-- This puts the data objects and notification events into
-- groups that can be marked as required or optional
-- ______________________________________________________________
brokerCnfRequired OBJECT-GROUP
        OBJECTS {
%{required}        }
        STATUS      current
        DESCRIPTION "Manditory class elements"
        ::= { brokerConformance 1 }

brokerCnfOptional OBJECT-GROUP
        OBJECTS {
%{optional}        }
        STATUS      current
        DESCRIPTION "Optional class elements"
        ::= { brokerConformance 2 }

brokerCnfArguments OBJECT-GROUP
        OBJECTS {
%{allEventArguments}        }
        STATUS      current
        DESCRIPTION "Data objects used as arguments to events"
        ::= { brokerConformance 3 }

<forEachSeverity>
brokerCnf%{sev} NOTIFICATION-GROUP
        NOTIFICATIONS {
%{eventNames}        }
        STATUS      current
        DESCRIPTION "Events that are of severity %{sev}"
        ::= { brokerConformance %{sevSequence} }
</forEachSeverity>

brokerComplianceModule MODULE-COMPLIANCE
        STATUS      current
        DESCRIPTION "Manditory and non-manditory mib objects"
        MODULE -- This module
            MANDATORY-GROUPS { brokerCnfRequired,
                               brokerCnfOptional,
                               <forEachSeverity>brokerCnf%{sev},</forEachSeverity>
                               brokerCnfArguments }

        ::= { brokerCompliance 1 }

END
