/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef RHM010EXCHANGETABLE_H
#define RHM010EXCHANGETABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(MRG-MESSAGING-MIB)
config_require(MRG-MESSAGING-MIB/rhm010ExchangeTable/rhm010ExchangeTable_interface)
config_require(MRG-MESSAGING-MIB/rhm010ExchangeTable/rhm010ExchangeTable_data_access)
config_require(MRG-MESSAGING-MIB/rhm010ExchangeTable/rhm010ExchangeTable_data_get)
config_require(MRG-MESSAGING-MIB/rhm010ExchangeTable/rhm010ExchangeTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for rhm010ExchangeTable 
     */
#include "rhm010ExchangeTable_oids.h"

    /*
     * enum definions 
     */
#include "../enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_rhm010ExchangeTable(void);
    void            shutdown_rhm010ExchangeTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table rhm010ExchangeTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * MRG-MESSAGING-MIB::rhm010ExchangeTable is subid 1 of rhm010Exchanges.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.2312.5672.1.1.7.1, length: 12
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review rhm010ExchangeTable registration context.
     */
    typedef netsnmp_data_list rhm010ExchangeTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review rhm010ExchangeTable data context structure.
     * This structure is used to represent the data for rhm010ExchangeTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * rhm010ExchangeTable.
     */
    typedef struct rhm010ExchangeTable_data_s {

        /*
         * rhm010ExchangeVhostRef(1)/ObjId/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            rhm010ExchangeVhostRef[255];
        size_t          rhm010ExchangeVhostRef_len;     /* # of char elements, not bytes */

        /*
         * rhm010ExchangeName(2)/Sstr/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            rhm010ExchangeName[255];
        size_t          rhm010ExchangeName_len; /* # of char elements, not bytes */

        /*
         * rhm010ExchangeType(3)/Sstr/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            rhm010ExchangeType[255];
        size_t          rhm010ExchangeType_len; /* # of char elements, not bytes */

        /*
         * rhm010ExchangeDurable(4)/TruthValue/ASN_INTEGER/long(u_long)//l/A/w/E/r/d/h
         */
        u_long          rhm010ExchangeDurable;

        /*
         * rhm010ExchangeAutoDelete(5)/TruthValue/ASN_INTEGER/long(u_long)//l/A/w/E/r/d/h
         */
        u_long          rhm010ExchangeAutoDelete;

        /*
         * rhm010ExchangeAltExchange(6)/ObjId/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            rhm010ExchangeAltExchange[255];
        size_t          rhm010ExchangeAltExchange_len;  /* # of char elements, not bytes */

        /*
         * rhm010ExchangeArguments(7)/Map/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            rhm010ExchangeArguments[65535];
        size_t          rhm010ExchangeArguments_len;    /* # of char elements, not bytes */

        /*
         * rhm010ExchangeProducerCount(8)/Hilo32/ASN_INTEGER/long(long)//l/A/w/e/r/d/H
         */
        long            rhm010ExchangeProducerCount;

        /*
         * rhm010ExchangeProducerCountHi(9)/Hilo32/ASN_INTEGER/long(long)//l/A/w/e/r/d/H
         */
        long            rhm010ExchangeProducerCountHi;

        /*
         * rhm010ExchangeProducerCountLow(10)/Hilo32/ASN_INTEGER/long(long)//l/A/w/e/r/d/H
         */
        long            rhm010ExchangeProducerCountLow;

        /*
         * rhm010ExchangeBindingCount(11)/Hilo32/ASN_INTEGER/long(long)//l/A/w/e/r/d/H
         */
        long            rhm010ExchangeBindingCount;

        /*
         * rhm010ExchangeBindingCountHi(12)/Hilo32/ASN_INTEGER/long(long)//l/A/w/e/r/d/H
         */
        long            rhm010ExchangeBindingCountHi;

        /*
         * rhm010ExchangeBindingCountLow(13)/Hilo32/ASN_INTEGER/long(long)//l/A/w/e/r/d/H
         */
        long            rhm010ExchangeBindingCountLow;

        /*
         * rhm010ExchangeMsgReceives(14)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             rhm010ExchangeMsgReceives;

        /*
         * rhm010ExchangeMsgDrops(15)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             rhm010ExchangeMsgDrops;

        /*
         * rhm010ExchangeMsgRoutes(16)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             rhm010ExchangeMsgRoutes;

        /*
         * rhm010ExchangeByteReceives(17)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             rhm010ExchangeByteReceives;

        /*
         * rhm010ExchangeByteDrops(18)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             rhm010ExchangeByteDrops;

        /*
         * rhm010ExchangeByteRoutes(19)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             rhm010ExchangeByteRoutes;

    } rhm010ExchangeTable_data;


    /*
     *********************************************************************
     * TODO:115:o: |-> Review rhm010ExchangeTable undo context.
     * We're just going to use the same data structure for our
     * undo_context. If you want to do something more efficent,
     * define your typedef here.
     */
    typedef rhm010ExchangeTable_data rhm010ExchangeTable_undo_data;

    /*
     * TODO:120:r: |-> Review rhm010ExchangeTable mib index.
     * This structure is used to represent the index for rhm010ExchangeTable.
     */
    typedef struct rhm010ExchangeTable_mib_index_s {

        /*
         * rhm010ExchangeInternalIndex(20)/UNSIGNED32/ASN_UNSIGNED/u_long(u_long)//l/a/w/e/r/d/h
         */
        u_long          rhm010ExchangeInternalIndex;


    } rhm010ExchangeTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review rhm010ExchangeTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_rhm010ExchangeTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review rhm010ExchangeTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * rhm010ExchangeTable_rowreq_ctx pointer.
     */
    typedef struct rhm010ExchangeTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_rhm010ExchangeTable_IDX_LEN];

        rhm010ExchangeTable_mib_index tbl_idx;

        rhm010ExchangeTable_data data;
        rhm010ExchangeTable_undo_data *undo;
        unsigned int    column_set_flags;       /* flags for set columns */


        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to rhm010ExchangeTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *rhm010ExchangeTable_data_list;

    } rhm010ExchangeTable_rowreq_ctx;

    typedef struct rhm010ExchangeTable_ref_rowreq_ctx_s {
        rhm010ExchangeTable_rowreq_ctx *rowreq_ctx;
    } rhm010ExchangeTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        rhm010ExchangeTable_pre_request(rhm010ExchangeTable_registration *
                                        user_context);
    int            
        rhm010ExchangeTable_post_request(rhm010ExchangeTable_registration *
                                         user_context, int rc);

    int            
        rhm010ExchangeTable_rowreq_ctx_init(rhm010ExchangeTable_rowreq_ctx
                                            * rowreq_ctx,
                                            void *user_init_ctx);
    void           
        rhm010ExchangeTable_rowreq_ctx_cleanup
        (rhm010ExchangeTable_rowreq_ctx * rowreq_ctx);

    int            
        rhm010ExchangeTable_check_dependencies
        (rhm010ExchangeTable_rowreq_ctx * rowreq_ctx);
    int            
        rhm010ExchangeTable_commit(rhm010ExchangeTable_rowreq_ctx *
                                   rowreq_ctx);

    rhm010ExchangeTable_rowreq_ctx
        *rhm010ExchangeTable_row_find_by_mib_index
        (rhm010ExchangeTable_mib_index * mib_idx);

    extern const oid rhm010ExchangeTable_oid[];
    extern const int rhm010ExchangeTable_oid_size;


#include "rhm010ExchangeTable_interface.h"
#include "rhm010ExchangeTable_data_access.h"
#include "rhm010ExchangeTable_data_get.h"
#include "rhm010ExchangeTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* RHM010EXCHANGETABLE_H */
/** @} */
