/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef RHM010LINKTABLE_H
#define RHM010LINKTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(MRG-MESSAGING-MIB)
config_require(MRG-MESSAGING-MIB/rhm010LinkTable/rhm010LinkTable_interface)
config_require(MRG-MESSAGING-MIB/rhm010LinkTable/rhm010LinkTable_data_access)
config_require(MRG-MESSAGING-MIB/rhm010LinkTable/rhm010LinkTable_data_get)
config_require(MRG-MESSAGING-MIB/rhm010LinkTable/rhm010LinkTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for rhm010LinkTable 
     */
#include "rhm010LinkTable_oids.h"

    /*
     * enum definions 
     */
#include "rhm010LinkTable_enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_rhm010LinkTable(void);
    void            shutdown_rhm010LinkTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table rhm010LinkTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * MRG-MESSAGING-MIB::rhm010LinkTable is subid 1 of rhm010Links.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.2312.5672.1.1.11.1, length: 12
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review rhm010LinkTable registration context.
     */
    typedef netsnmp_data_list rhm010LinkTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review rhm010LinkTable data context structure.
     * This structure is used to represent the data for rhm010LinkTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * rhm010LinkTable.
     */
    typedef struct rhm010LinkTable_data_s {

        /*
         * rhm010LinkVhostRef(1)/ObjId/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            rhm010LinkVhostRef[255];
        size_t          rhm010LinkVhostRef_len; /* # of char elements, not bytes */

        /*
         * rhm010LinkHost(2)/Sstr/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            rhm010LinkHost[255];
        size_t          rhm010LinkHost_len;     /* # of char elements, not bytes */

        /*
         * rhm010LinkPort(3)/Uint16/ASN_INTEGER/long(long)//l/A/W/e/r/d/H
         */
        long            rhm010LinkPort;

        /*
         * rhm010LinkTransport(4)/Sstr/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            rhm010LinkTransport[255];
        size_t          rhm010LinkTransport_len;        /* # of char elements, not bytes */

        /*
         * rhm010LinkDurable(5)/TruthValue/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
        u_long          rhm010LinkDurable;

        /*
         * rhm010LinkState(6)/Sstr/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            rhm010LinkState[255];
        size_t          rhm010LinkState_len;    /* # of char elements, not bytes */

        /*
         * rhm010LinkLastError(7)/Lstr/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            rhm010LinkLastError[65535];
        size_t          rhm010LinkLastError_len;        /* # of char elements, not bytes */

    } rhm010LinkTable_data;


    /*
     *********************************************************************
     * TODO:115:o: |-> Review rhm010LinkTable undo context.
     * We're just going to use the same data structure for our
     * undo_context. If you want to do something more efficent,
     * define your typedef here.
     */
    typedef rhm010LinkTable_data rhm010LinkTable_undo_data;

    /*
     * TODO:120:r: |-> Review rhm010LinkTable mib index.
     * This structure is used to represent the index for rhm010LinkTable.
     */
    typedef struct rhm010LinkTable_mib_index_s {

        /*
         * rhm010LinkInternalIndex(9)/UNSIGNED32/ASN_UNSIGNED/u_long(u_long)//l/a/w/e/r/d/h
         */
        u_long          rhm010LinkInternalIndex;


    } rhm010LinkTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review rhm010LinkTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_rhm010LinkTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review rhm010LinkTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * rhm010LinkTable_rowreq_ctx pointer.
     */
    typedef struct rhm010LinkTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_rhm010LinkTable_IDX_LEN];

        rhm010LinkTable_mib_index tbl_idx;

        rhm010LinkTable_data data;
        rhm010LinkTable_undo_data *undo;
        unsigned int    column_set_flags;       /* flags for set columns */


        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to rhm010LinkTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *rhm010LinkTable_data_list;

    } rhm010LinkTable_rowreq_ctx;

    typedef struct rhm010LinkTable_ref_rowreq_ctx_s {
        rhm010LinkTable_rowreq_ctx *rowreq_ctx;
    } rhm010LinkTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        rhm010LinkTable_pre_request(rhm010LinkTable_registration *
                                    user_context);
    int            
        rhm010LinkTable_post_request(rhm010LinkTable_registration *
                                     user_context, int rc);

    int            
        rhm010LinkTable_rowreq_ctx_init(rhm010LinkTable_rowreq_ctx *
                                        rowreq_ctx, void *user_init_ctx);
    void           
        rhm010LinkTable_rowreq_ctx_cleanup(rhm010LinkTable_rowreq_ctx *
                                           rowreq_ctx);

    int            
        rhm010LinkTable_check_dependencies(rhm010LinkTable_rowreq_ctx *
                                           rowreq_ctx);
    int             rhm010LinkTable_commit(rhm010LinkTable_rowreq_ctx *
                                           rowreq_ctx);

    rhm010LinkTable_rowreq_ctx
        *rhm010LinkTable_row_find_by_mib_index(rhm010LinkTable_mib_index *
                                               mib_idx);

    extern const oid rhm010LinkTable_oid[];
    extern const int rhm010LinkTable_oid_size;


#include "rhm010LinkTable_interface.h"
#include "rhm010LinkTable_data_access.h"
#include "rhm010LinkTable_data_get.h"
#include "rhm010LinkTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* RHM010LINKTABLE_H */
/** @} */
