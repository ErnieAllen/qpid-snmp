/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef brokerBINDINGTABLE_H
#define brokerBINDINGTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(QPID-MESSAGING-MIB)
config_require(QPID-MESSAGING-MIB/brokerBindingTable/brokerBindingTable_interface)
config_require(QPID-MESSAGING-MIB/brokerBindingTable/brokerBindingTable_data_access)
config_require(QPID-MESSAGING-MIB/brokerBindingTable/brokerBindingTable_data_get)
config_require(QPID-MESSAGING-MIB/brokerBindingTable/brokerBindingTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for brokerBindingTable 
     */
#include "BindingTable_oids.h"

    /*
     * enum definions 
     */
#include "../enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_BindingTable(void);
    void            shutdown_brokerBindingTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table brokerBindingTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * QPID-MESSAGING-MIB::brokerBindingTable is subid 1 of brokerBindings.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.18060.5672.1.1.8.1, length: 12
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review brokerBindingTable registration context.
     */
    typedef netsnmp_data_list brokerBindingTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review brokerBindingTable data context structure.
     * This structure is used to represent the data for brokerBindingTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * brokerBindingTable.
     */
    typedef struct brokerBindingTable_data_s {

        /*
         * brokerBindingExchangeRef(1)/ObjId/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            brokerBindingExchangeRef[255];
        size_t          brokerBindingExchangeRef_len;   /* # of char elements, not bytes */

        /*
         * brokerBindingQueueRef(2)/ObjId/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            brokerBindingQueueRef[255];
        size_t          brokerBindingQueueRef_len;      /* # of char elements, not bytes */

        /*
         * brokerBindingBindingKey(3)/Lstr/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            brokerBindingBindingKey[65535];
        size_t          brokerBindingBindingKey_len;    /* # of char elements, not bytes */

        /*
         * brokerBindingArguments(4)/Map/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            brokerBindingArguments[65535];
        size_t          brokerBindingArguments_len;     /* # of char elements, not bytes */

        /*
         * brokerBindingOrigin(5)/Sstr/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            brokerBindingOrigin[255];
        size_t          brokerBindingOrigin_len;        /* # of char elements, not bytes */

        /*
         * brokerBindingMsgMatched(6)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             brokerBindingMsgMatched;

    } brokerBindingTable_data;


    /*
     *********************************************************************
     * TODO:115:o: |-> Review brokerBindingTable undo context.
     * We're just going to use the same data structure for our
     * undo_context. If you want to do something more efficent,
     * define your typedef here.
     */
    typedef brokerBindingTable_data brokerBindingTable_undo_data;

    /*
     * TODO:120:r: |-> Review brokerBindingTable mib index.
     * This structure is used to represent the index for brokerBindingTable.
     */
    typedef struct brokerBindingTable_mib_index_s {

        /*
         * brokerBindingInternalIndex(7)/UNSIGNED32/ASN_UNSIGNED/u_long(u_long)//l/a/w/e/r/d/h
         */
        u_long          brokerBindingInternalIndex;


    } brokerBindingTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review brokerBindingTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_brokerBindingTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review brokerBindingTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * brokerBindingTable_rowreq_ctx pointer.
     */
    typedef struct brokerBindingTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_brokerBindingTable_IDX_LEN];

        brokerBindingTable_mib_index tbl_idx;

        brokerBindingTable_data data;
        brokerBindingTable_undo_data *undo;
        unsigned int    column_set_flags;       /* flags for set columns */


        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to brokerBindingTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *brokerBindingTable_data_list;

    } brokerBindingTable_rowreq_ctx;

    typedef struct brokerBindingTable_ref_rowreq_ctx_s {
        brokerBindingTable_rowreq_ctx *rowreq_ctx;
    } brokerBindingTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        brokerBindingTable_pre_request(brokerBindingTable_registration *
                                       user_context);
    int            
        brokerBindingTable_post_request(brokerBindingTable_registration *
                                        user_context, int rc);

    int            
        brokerBindingTable_rowreq_ctx_init(brokerBindingTable_rowreq_ctx *
                                           rowreq_ctx,
                                           void *user_init_ctx);
    void           
        brokerBindingTable_rowreq_ctx_cleanup(brokerBindingTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        brokerBindingTable_check_dependencies(brokerBindingTable_rowreq_ctx
                                              * rowreq_ctx);
    int             brokerBindingTable_commit(brokerBindingTable_rowreq_ctx
                                              * rowreq_ctx);

    brokerBindingTable_rowreq_ctx
        *brokerBindingTable_row_find_by_mib_index
        (brokerBindingTable_mib_index * mib_idx);

    extern const oid brokerBindingTable_oid[];
    extern const int brokerBindingTable_oid_size;


#include "BindingTable_interface.h"
#include "BindingTable_data_access.h"
#include "BindingTable_data_get.h"
#include "BindingTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* brokerBINDINGTABLE_H */
/** @} */
